{"version":3,"sources":["media/off-payroll.png","components/Banner.js","components/Intro.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","src","banner","alt","Component","Intro","Calculator","props","handleInputChange","event","preventDefault","setState","target","name","parseInt","value","totalFees","state","rate","earnings","expenses","handleSubmit","insideTax","handleInsideTax","incomeTax","toFixed","nationalInsurance","combined","insideFees","handleInsideFees","insideAnnual","insideMonthly","revenue","handleRevenue","salary","corporationTax","netProfit","personalTax","handleOutsideIT","incomeTaxOutside","paLost","combinedOutside","dividends","handleDividends","outsideFees","handleOutsideFees","outsideAnnual","outsideMonthly","annual","Math","round","over100","visible","buttonText","this","id","onSubmit","type","onChange","class","App","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8833a4ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/off-payroll.6ca515b5.png\";","import React, { Component } from 'react';\r\nimport './Banner.css';\r\nimport banner from '../media/off-payroll.png';\r\n\r\nclass Banner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <img src={banner} alt=\"The Off-Payroll rules\" className=\"banner\"></img>\r\n                <div className=\"banner-text\">\r\n                    <h1>OFF-PAYROLL TAX CALCULATOR</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\r\nimport './Intro.css';\r\n\r\nclass Intro extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"intro\">\r\n                <p>The Off-Payroll working rules are due to be implemented across the private sector from April 2020, introducing significant \r\n                    changes to how the IR35 tax legislation is applied.</p>\r\n                <p>Notably, the Off-Payroll rules hold end-clients responsible for assessing and determining the IR35 status of their contractors, \r\n                    while imposing an employment tax liability on parties engaging directly with contractors deemed 'inside IR35'.</p>\r\n                <p>Contractors considered caught by the Off-Payroll rules are also unable to claim tax relief on business expenses, with the 5% \r\n                    allowance under the IR35 legislation having been withdrawn.</p>\r\n                <p>If you're a contractor, use this Off-Payroll tax calculator to better understand the financial impact of the Off-Payroll rules \r\n                    on your earnings and tax liability.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from 'react';\r\nimport './Calculator.css';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            visible: false,\r\n            rate: 0,\r\n            expenses: 0,\r\n            totalFees: 0,\r\n            incomeTax: 0,\r\n            nationalInsurance: 0,\r\n            combined: 0,\r\n            insideAnnual: 0,\r\n            insideMonthly: 0,\r\n            earnings: 0,\r\n            corporationTax: 0,\r\n            incomeTaxOutside: 0,\r\n            combinedOutside: 0,\r\n            outsideAnnual: 0,\r\n            outsideMonthly: 0\r\n        }\r\n    }\r\n    \r\n    handleInputChange = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value, 10)\r\n        }, () => {\r\n            this.setState({\r\n                totalFees: this.state.rate * 220,\r\n                earnings: (this.state.rate * 220) - this.state.expenses\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        // Inside IR35 calculation\r\n\r\n        const totalFees = this.state.totalFees;\r\n\r\n        const insideTax = this.handleInsideTax(totalFees);\r\n        const incomeTax = insideTax[0].toFixed(2);\r\n        const nationalInsurance = insideTax[1].toFixed(2);\r\n        const combined = insideTax[2].toFixed(2);\r\n\r\n        const insideFees = this.handleInsideFees(totalFees, combined);\r\n        const insideAnnual = insideFees[0].toFixed(2);\r\n        const insideMonthly = insideFees[1].toFixed(2);\r\n\r\n        // Outside IR35 calculation\r\n\r\n        const earnings = this.state.totalFees - this.state.expenses;\r\n\r\n        const revenue = this.handleRevenue(earnings);\r\n        const salary = revenue[0];\r\n        const corporationTax = revenue[1].toFixed(2);\r\n        const netProfit = revenue[2].toFixed(2);\r\n\r\n        const personalTax = this.handleOutsideIT(netProfit);\r\n        const incomeTaxOutside = personalTax[0].toFixed(2); //parseFloat(personalTax[0].toFixed(2));\r\n        const paLost = personalTax[1];\r\n        \r\n        const combinedOutside = (personalTax[0] + revenue[1]).toFixed(2);\r\n\r\n        const dividends = this.handleDividends(netProfit);\r\n\r\n        const outsideFees = this.handleOutsideFees(salary, dividends, paLost);\r\n        const outsideAnnual = outsideFees[0].toFixed(2);\r\n        const outsideMonthly = outsideFees[1].toFixed(2);\r\n\r\n        this.setState({\r\n            // Inside IR35 variables\r\n            incomeTax: incomeTax,\r\n            nationalInsurance: nationalInsurance,\r\n            combined: combined,\r\n            insideAnnual: insideAnnual,\r\n            insideMonthly: insideMonthly,\r\n            // Outside IR35 variables\r\n            earnings: earnings,\r\n            salary: salary,\r\n            corporationTax: corporationTax,\r\n            netProfit: netProfit,\r\n            dividends: dividends,\r\n            incomeTaxOutside: incomeTaxOutside,\r\n            outsideAnnual: outsideAnnual,\r\n            outsideMonthly: outsideMonthly,\r\n            combinedOutside: combinedOutside,\r\n            paLost: paLost\r\n        });\r\n    }\r\n    \r\n    handleInsideTax = (totalFees) => {\r\n        var incomeTax = 0;\r\n        var nationalInsurance = 0;\r\n        switch (true) {\r\n            case (totalFees <= 12500):\r\n                nationalInsurance = ((totalFees - 8632) * .12);\r\n                break;\r\n            case (totalFees <= 50000):\r\n                incomeTax = ((totalFees - 12500) * .2);\r\n                nationalInsurance = ((totalFees - 8632) * .12);\r\n                break;\r\n            case (totalFees <= 50024):\r\n                incomeTax = (7500 + ((totalFees - 50000) * .4));\r\n                nationalInsurance = ((totalFees - 8632) * .12);\r\n                break;\r\n            case (totalFees <= 150000):\r\n                incomeTax = (7500 + ((totalFees - 50000) * .4));\r\n                nationalInsurance = (4964.16 + ((totalFees - 50000) * .02));\r\n                break;\r\n            case (totalFees > 150000):\r\n                incomeTax = (47500 + ((totalFees - 150000) * .45));\r\n                nationalInsurance = (4964.16 + ((totalFees - 50000) * .02));\r\n                break;\r\n        }\r\n        var combined = incomeTax + nationalInsurance;\r\n        return [incomeTax, nationalInsurance, combined];\r\n    }\r\n\r\n    handleInsideFees = (totalFees, combined) => {\r\n        var annual = totalFees - combined;\r\n        var monthly = Math.round((annual / 12) * 100) / 100;\r\n        return [annual, monthly];\r\n    }\r\n\r\n    handleRevenue = (earnings) => {\r\n        var salary = 0;\r\n        var corporationTax = 0;\r\n        var netProfit = 0;\r\n        if (earnings <= 8500) {\r\n            salary = earnings;\r\n        } else {\r\n            salary = 8500;\r\n            corporationTax = (earnings - 8500) * .19;\r\n            netProfit = (earnings - 8500) - corporationTax;\r\n        }\r\n        return [salary, corporationTax, netProfit];\r\n    }\r\n\r\n    handleOutsideIT = (netProfit) => {\r\n        var incomeTax = 0;\r\n        switch (true) {\r\n            case (netProfit <= 41500):\r\n                incomeTax = (netProfit - 6000) * .075;\r\n                break;\r\n            case (netProfit <= 141500):\r\n                incomeTax = ((netProfit - 41500) * .325) + 2662.50;\r\n                break;\r\n            case (netProfit > 141500):\r\n                incomeTax = ((netProfit - 141500) * .381) + 35162.50;\r\n                break;\r\n        }\r\n        // Stealth tax calculation for contractors earning £100,000+\r\n        // £100,000 threshold composed of £91,500 profits and £8,500 salary\r\n        var over100 = netProfit - 91500;\r\n        var paLost = 0;\r\n        if (over100 > 0 && over100 >= 25000) {\r\n            // If threshold is met, paLost accounts for stealth tax\r\n            // £1 of personal allowance lost for each £2 earned over £100,000 up to £125,000\r\n            paLost = 25000 * .1625;\r\n        } else if (over100 > 0 && over100 < 25000) {\r\n            paLost = over100 * .1625;\r\n        }\r\n        incomeTax += paLost;\r\n        return [incomeTax, paLost];\r\n    }\r\n\r\n    handleDividends = (netProfit) => {\r\n        var dividends = 0;\r\n        switch (true) {\r\n            case (netProfit <= 6000):\r\n                // 6000 accounts for 4000 remaining PA and 2000 DA combined\r\n                dividends = netProfit;\r\n                break;\r\n            case (netProfit <= 41500):\r\n                dividends = 6000 + ((netProfit - 6000) * .925);\r\n                break;\r\n            case (netProfit <= 141500):\r\n                dividends = ((netProfit - 41500) * .675) + 32837.50 + 6000;\r\n                break;\r\n            case (netProfit > 141500):\r\n                dividends = ((netProfit - 141500) * 619) + 64562.50 + 6000;\r\n                break;\r\n        }\r\n        return dividends;\r\n    }\r\n\r\n    handleOutsideFees = (salary, dividends, paLost) => {\r\n        const annual = (salary + dividends) - paLost;\r\n        const monthly = Math.round((annual / 12) * 100) / 100;\r\n        return [annual, monthly];\r\n    }\r\n    \r\n    render() {\r\n        const buttonText = this.state.combined ? \"Update Calculation\" : \"Calculate Tax\";\r\n        // Inside IR35 variables\r\n        const {rate} = this.state\r\n        const {totalFees} = this.state\r\n        const {incomeTax} = this.state\r\n        const {nationalInsurance} = this.state\r\n        const {combined} = this.state\r\n        const {insideAnnual} = this.state\r\n        const {insideMonthly} = this.state\r\n        // Outside IR35 variables\r\n        const {expenses} = this.state\r\n        const {earnings} = this.state\r\n        const {corporationTax} = this.state\r\n        const {outsideAnnual} = this.state\r\n        const {outsideMonthly} = this.state\r\n        const {incomeTaxOutside} = this.state\r\n        const {combinedOutside} = this.state\r\n        \r\n        return (\r\n            <div className=\"calculator\">\r\n              <div className=\"calc-div\" id=\"left-top\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>My daily contract rate is £ <input type=\"text\" name=\"rate\" onChange={this.handleInputChange}></input></p>\r\n                    <p>My annual expenses amount to £ <input type=\"text\" name=\"expenses\" onChange={this.handleInputChange}></input></p>\r\n                    <button type=\"submit\">{buttonText}</button>\r\n                </form>\r\n                <p>The following calculations are based on your daily contract rate of <p className={ this.state.rate ? \"green\" : \"white\" }>£{rate}</p>, estimating that you work 44 weeks \r\n                per year, generating gross annual contracting fees of <p className={ this.state.totalFees ? \"green\" : \"white\" }>£{totalFees}</p>, while claiming expenses amounting to <p className={ this.state.expenses ? \"green\" : \"white\" }>£{expenses}</p>.</p>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"right\">\r\n                <h2>Comparison</h2>\r\n                <table>\r\n                    <tr>\r\n                        <th class=\"col1\"></th>\r\n                        <th class=\"col23\"><p>Inside IR35</p></th>\r\n                        <th class=\"col23\"><p>Outside IR35</p></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Total tax liability</p></td>\r\n                        <td className={ this.state.combined <= this.state.combinedOutside ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{combined}</p></td>\r\n                        <td className={ this.state.combinedOutside <= this.state.combined ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{combinedOutside}</p></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Annual post-tax income</p></td>\r\n                        <td className={ this.state.insideAnnual >= this.state.outsideAnnual ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{insideAnnual}</p></td>\r\n                        <td className={ this.state.outsideAnnual >= this.state.insideAnnual ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{outsideAnnual}</p></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Monthly post-tax income</p></td>\r\n                        <td className={ this.state.insideMonthly >= this.state.outsideMonthly ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{insideMonthly}</p></td>\r\n                        <td className={ this.state.outsideMonthly >= this.state.insideMonthly ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{outsideMonthly}</p></td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"left\">\r\n                <h2>Inside IR35</h2>\r\n                <ul>\r\n                    <li>Your gross earnings are <p className={ this.state.totalFees ? \"green\" : \"white\" }>£{totalFees}</p>.</li>\r\n                    <li>Your income tax liability is <p className={ this.state.incomeTax ? \"red\" : \"white\" }>£{incomeTax}</p>.</li>\r\n                    <li>Your National Insurance liability is <p className={ this.state.nationalInsurance ? \"red\" : \"white\" }>£{nationalInsurance}</p>.</li>\r\n                    <li>Your overall combined tax liability is <p className={ this.state.combined ? \"red\" : \"white\" }>£{combined}</p>.</li>\r\n                    <li>Working 'inside IR35', your annual post-tax income amounts to <p className={ this.state.insideAnnual ? \"green\" : \"white\" }>£{insideAnnual}</p>.</li>\r\n                    <li>This amounts to <p className={ this.state.insideMonthly ? \"green\" : \"white\" }>£{insideMonthly}</p> per month.</li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"right\">\r\n                <h2>Outside IR35</h2>\r\n                <ul>\r\n                    <li>After expenses of <p className={ this.state.expenses ? \"green\" : \"white\" }>£{expenses}</p>, your gross earnings are <p className={ this.state.rate ? \"green\" : \"white\" }>£{earnings}</p>.</li>\r\n                    <li>Your Corporation Tax liability is <p className={ this.state.corporationTax ? \"red\" : \"white\" }>£{corporationTax}</p>.</li>\r\n                    <li>The income tax due on your dividends is <p className={ this.state.incomeTaxOutside ? \"red\" : \"white\" }>£{incomeTaxOutside}</p>.</li>\r\n                    <li>Your overall combined tax liability is <p className={ this.state.combinedOutside ? \"red\" : \"white\" }>£{combinedOutside}</p>.</li>\r\n                    <li>Working 'outside IR35', your annual post-tax income amounts to <p className={ this.state.outsideAnnual ? \"green\" : \"white\" }>£{outsideAnnual}</p>.</li>\r\n                    <li>This amounts to <p className={ this.state.outsideMonthly ? \"green\" : \"white\" }>£{outsideMonthly}</p> per month.</li>\r\n                </ul>\r\n              </div>\r\n              <p>Please note: These calculations are accurate as of the 2019-20 tax year.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from 'react';\nimport './App.css';\nimport Banner from './components/Banner';\nimport Intro from './components/Intro';\nimport Calculator from './components/Calculator';\n\nclass App extends Component {\n  state = {\n    visible: true\n  }\n  render () {\n    const buttonText = this.state.visible ? \"Calculate Tax\" : \"Hide Calculation\";\n    return (\n      <div className=\"App\">\n        <Banner />\n        <Intro />\n        <button onClick={() => {\n          this.setState({ visible: !this.state.visible });\n        }}>{buttonText}</button>\n        { this.state.visible ? null : <Calculator /> }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}