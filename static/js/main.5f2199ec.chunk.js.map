{"version":3,"sources":["media/off-payroll.png","components/Banner.js","components/Intro.js","components/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Banner","className","src","banner","alt","Component","Intro","Calculator","props","handleInputChange","event","preventDefault","setState","target","name","parseInt","value","totalFees","state","rate","handleSubmit","incomeTax","nationalInsurance","over100","combined","insideAnnual","insideMonthly","Math","round","incomeTaxFixed","toFixed","nationalInsuranceFixed","combinedFixed","insideAnnualFixed","insideMonthlyFixed","earnings","expenses","salary","corporationTax","netProfit","dividends","incomeTaxOutside","paLost","combinedOutside","outsideAnnual","outsideMonthly","combinedOutsideFixed","outsideAnnualFixed","outsideMonthlyFixed","incomeTaxOutsideFixed","corporationTaxFixed","additional","visible","buttonText","this","id","onSubmit","type","onChange","class","App","onClick","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f2199ec.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/off-payroll.6ca515b5.png\";","import React, { Component } from 'react';\r\nimport './Banner.css';\r\nimport banner from '../media/off-payroll.png';\r\n\r\nclass Banner extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <img src={banner} alt=\"The Off-Payroll rules\" className=\"banner\"></img>\r\n                <div className=\"banner-text\">\r\n                    <h1>OFF-PAYROLL TAX CALCULATOR</h1>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Banner;","import React, { Component } from 'react';\r\nimport './Intro.css';\r\n\r\nclass Intro extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"intro\">\r\n                <p>The Off-Payroll working rules are due to be implemented across the private sector from April 2020, introducing significant \r\n                    changes to how the IR35 tax legislation is applied.</p>\r\n                <p>Notably, the Off-Payroll rules hold end-clients responsible for assessing and determining the IR35 status of their contractors, \r\n                    while imposing an employment tax liability on parties engaging directly with contractors deemed 'inside IR35'.</p>\r\n                <p>Contractors considered caught by the Off-Payroll rules are also unable to claim tax relief on business expenses, with the 5% \r\n                    allowance under the IR35 legislation having been withdrawn.</p>\r\n                <p>If you're a contractor, use this Off-Payroll tax calculator to better understand the financial impact of the Off-Payroll rules \r\n                    on your earnings and tax liability.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Intro;","import React, { Component } from 'react';\r\nimport './Calculator.css';\r\n\r\nclass Calculator extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            visible: false,\r\n            rate: 0,\r\n            expenses: 0,\r\n            totalFees: 0,\r\n            incomeTaxFixed: 0,\r\n            nationalInsuranceFixed: 0,\r\n            combinedFixed: 0,\r\n            insideAnnualFixed: 0,\r\n            insideMonthlyFixed: 0,\r\n            earnings: 0,\r\n            corporationTaxFixed: 0,\r\n            incomeTaxOutsideFixed: 0,\r\n            combinedOutsideFixed: 0,\r\n            outsideAnnualFixed: 0,\r\n            outsideMonthlyFixed: 0\r\n        }\r\n    }\r\n    \r\n    handleInputChange = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            [event.target.name]: parseInt(event.target.value, 10)\r\n        }, () => {\r\n            this.setState({\r\n                totalFees: this.state.rate * 220\r\n            })\r\n        })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        \r\n        // Inside IR35 calculation\r\n\r\n        let incomeTax = 0;\r\n        let nationalInsurance = 0;\r\n        \r\n        if (this.state.totalFees <= 8632) {\r\n            incomeTax = 0;\r\n            nationalInsurance = 0;\r\n        } else if (this.state.totalFees <= 12500) {\r\n            incomeTax = 0;\r\n            nationalInsurance = ((this.state.totalFees - 8632) * .12);\r\n        } else if (this.state.totalFees <= 50000) {\r\n            incomeTax = ((this.state.totalFees - 12500) * .2);\r\n            nationalInsurance = ((this.state.totalFees - 8632) * .12);\r\n        } else if (this.state.totalFees <= 150000) {\r\n            incomeTax = (7500 + ((this.state.totalFees - 50000) * .4));\r\n            nationalInsurance = (4964.16 + ((this.state.totalFees - 50000) * .02));\r\n        } else {\r\n            incomeTax = (47500 + ((this.state.totalFees - 150000) * .45));\r\n            nationalInsurance = (4964.16 + ((this.state.totalFees - 50000) * .02));\r\n        }\r\n\r\n        const combined = incomeTax + nationalInsurance;\r\n        const insideAnnual = this.state.totalFees - combined;\r\n        const insideMonthly = Math.round((insideAnnual / 12) * 100) / 100;\r\n\r\n        const incomeTaxFixed = incomeTax.toFixed(2);\r\n        const nationalInsuranceFixed = nationalInsurance.toFixed(2);\r\n\r\n        const combinedFixed = combined.toFixed(2);\r\n        const insideAnnualFixed = insideAnnual.toFixed(2);\r\n        const insideMonthlyFixed = insideMonthly.toFixed(2);\r\n\r\n        // Outside IR35 calculation\r\n\r\n        const earnings = this.state.totalFees - this.state.expenses;\r\n\r\n        let salary = 0;\r\n        let corporationTax = 0;\r\n        let netProfit = 0;\r\n\r\n        let dividends = 0;\r\n        let incomeTaxOutside = 0;\r\n        let additional = 0;\r\n        let paLost = 0;\r\n        let over100 = 0;\r\n\r\n        if (earnings <= 8500) {\r\n            salary = earnings;\r\n            corporationTax = 0;\r\n        } else {\r\n            salary = 8500;\r\n            corporationTax = (earnings - 8500) * .19;\r\n            netProfit = (earnings - 8500) - corporationTax;\r\n        }\r\n\r\n        if (netProfit <= 6000) {\r\n            // 6000 accounts for 4000 remaining PA and 2000 DA combined\r\n            dividends = netProfit;\r\n        } else if (netProfit <= 41500) {\r\n            incomeTaxOutside = (netProfit - 6000) * .075;\r\n            dividends = 6000 + ((netProfit - 6000) * .925);\r\n        } else if (netProfit <= 141500) {\r\n            incomeTaxOutside = ((netProfit - 41500) * .325) + 2662.50;\r\n            dividends = ((netProfit - 41500) * .675) + 32837.50 + 6000;\r\n            //incomeTaxOutside = parseInt(((netProfit - 41500) * .325) + 2662.50, 10);\r\n            //dividends = parseInt(((netProfit - 41500) * .675) + 32837.50 + 6000, 10);\r\n        } else {\r\n            incomeTaxOutside = ((netProfit - 141500) * .381) + 35162.50;\r\n            dividends = ((netProfit - 141500) * 619) + 64562.50 + 6000;\r\n            //additional = netProfit - 141500;\r\n        }\r\n\r\n        // £100,000 threshold composed of £91,500 profits and £8,500 salary\r\n        over100 = netProfit - 91500;\r\n        if (over100 > 0 && over100 >= 25000) {\r\n            // If threshold is met, paLost accounts for stealth tax\r\n            // £1 of personal allowance lost for each £2 earned over £100,000 up to £125,000\r\n            paLost = 25000 * .1625;\r\n            incomeTaxOutside += paLost;\r\n        } else if (over100 > 0 && over100 < 25000) {\r\n            paLost = over100 * .1625;\r\n            incomeTaxOutside += paLost;\r\n        }\r\n\r\n        const combinedOutside = corporationTax + incomeTaxOutside;\r\n        const outsideAnnual = (salary + dividends) - paLost;\r\n        const outsideMonthly = Math.round((outsideAnnual / 12) * 100) / 100;\r\n        \r\n        const combinedOutsideFixed = combinedOutside.toFixed(2);\r\n        const outsideAnnualFixed = outsideAnnual.toFixed(2);\r\n        const outsideMonthlyFixed = outsideMonthly.toFixed(2);\r\n        \r\n        const incomeTaxOutsideFixed = incomeTaxOutside.toFixed(2);\r\n        const corporationTaxFixed = corporationTax.toFixed(2);\r\n\r\n        this.setState({\r\n            // Inside IR35 variables\r\n            incomeTaxFixed: incomeTaxFixed,\r\n            nationalInsuranceFixed: nationalInsuranceFixed,\r\n            combinedFixed: combinedFixed,\r\n            insideAnnualFixed: insideAnnualFixed,\r\n            insideMonthlyFixed: insideMonthlyFixed,\r\n            // Outside IR35 variables\r\n            earnings: earnings,\r\n            salary: salary,\r\n            corporationTaxFixed: corporationTaxFixed,\r\n            netProfit: netProfit,\r\n            dividends: dividends,\r\n            incomeTaxOutsideFixed: incomeTaxOutsideFixed,\r\n            additional: additional,\r\n            outsideAnnualFixed: outsideAnnualFixed,\r\n            outsideMonthlyFixed: outsideMonthlyFixed,\r\n            combinedOutsideFixed: combinedOutsideFixed,\r\n            paLost: paLost\r\n        });\r\n    }\r\n    \r\n    render() {\r\n        const buttonText = this.state.combined ? \"Update Calculation\" : \"Calculate Tax\";\r\n        // Inside IR35 variables\r\n        const {rate} = this.state\r\n        const {totalFees} = this.state\r\n        const {incomeTaxFixed} = this.state\r\n        const {nationalInsuranceFixed} = this.state\r\n        const {combinedFixed} = this.state\r\n        const {insideAnnualFixed} = this.state\r\n        const {insideMonthlyFixed} = this.state\r\n        // Outside IR35 variables\r\n        const {expenses} = this.state\r\n        const {earnings} = this.state\r\n        const {corporationTaxFixed} = this.state\r\n        const {outsideAnnualFixed} = this.state\r\n        const {outsideMonthlyFixed} = this.state\r\n        const {incomeTaxOutsideFixed} = this.state\r\n        const {combinedOutsideFixed} = this.state\r\n        \r\n        return (\r\n            <div className=\"calculator\">\r\n              <div className=\"calc-div\" id=\"left-top\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <p>My daily contract rate is £ <input type=\"text\" name=\"rate\" onChange={this.handleInputChange}></input></p>\r\n                    <p>My annual expenses amount to £ <input type=\"text\" name=\"expenses\" onChange={this.handleInputChange}></input></p>\r\n                    <button type=\"submit\">{buttonText}</button>\r\n                </form>\r\n                <p>The following calculations are based on your daily contract rate of <p className={ this.state.rate ? \"green\" : \"white\" }>£{rate}</p>, estimating that you work 44 weeks \r\n                per year, generating gross annual contracting fees of <p className={ this.state.totalFees ? \"green\" : \"white\" }>£{totalFees}</p>, while claiming expenses amounting to <p className={ this.state.expenses ? \"green\" : \"white\" }>£{expenses}</p>.</p>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"right\">\r\n                <h2>Comparison</h2>\r\n                <table>\r\n                    <tr>\r\n                        <th class=\"col1\"></th>\r\n                        <th class=\"col23\"><p>Inside IR35</p></th>\r\n                        <th class=\"col23\"><p>Outside IR35</p></th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Total tax liability</p></td>\r\n                        <td className={ this.state.combinedFixed <= this.state.combinedOutsideFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{combinedFixed}</p></td>\r\n                        <td className={ this.state.combinedOutsideFixed <= this.state.combinedFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{combinedOutsideFixed}</p></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Annual post-tax income</p></td>\r\n                        <td className={ this.state.insideAnnualFixed >= this.state.outsideAnnualFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{insideAnnualFixed}</p></td>\r\n                        <td className={ this.state.outsideAnnualFixed >= this.state.insideAnnualFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{outsideAnnualFixed}</p></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"col1\"><p>Monthly post-tax income</p></td>\r\n                        <td className={ this.state.insideMonthlyFixed >= this.state.outsideMonthlyFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{insideMonthlyFixed}</p></td>\r\n                        <td className={ this.state.outsideMonthlyFixed >= this.state.insideMonthlyFixed ? \"greenBox\" : \"redBox\" }><p className=\"white\">£{outsideMonthlyFixed}</p></td>\r\n                    </tr>\r\n                </table>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"left\">\r\n                <h2>Inside IR35</h2>\r\n                <ul>\r\n                    <li>Your gross earnings are <p className={ this.state.totalFees ? \"green\" : \"white\" }>£{totalFees}</p>.</li>\r\n                    <li>Your income tax liability is <p className={ this.state.incomeTaxFixed ? \"red\" : \"white\" }>£{incomeTaxFixed}</p>.</li>\r\n                    <li>Your National Insurance liability is <p className={ this.state.nationalInsuranceFixed ? \"red\" : \"white\" }>£{nationalInsuranceFixed}</p>.</li>\r\n                    <li>Your overall combined tax liability is <p className={ this.state.combinedFixed ? \"red\" : \"white\" }>£{combinedFixed}</p>.</li>\r\n                    <li>Working 'inside IR35', your annual post-tax income amounts to <p className={ this.state.insideAnnualFixed ? \"green\" : \"white\" }>£{insideAnnualFixed}</p>.</li>\r\n                    <li>This amounts to <p className={ this.state.insideMonthlyFixed ? \"green\" : \"white\" }>£{insideMonthlyFixed}</p> per month.</li>\r\n                </ul>\r\n              </div>\r\n              <div className=\"calc-div\" id=\"right\">\r\n                <h2>Outside IR35</h2>\r\n                <ul>\r\n                    <li>After expenses of <p className={ this.state.expenses ? \"green\" : \"white\" }>£{expenses}</p>, your gross earnings are <p className={ this.state.rate ? \"green\" : \"white\" }>£{earnings}</p>.</li>\r\n                    <li>Your Corporation Tax liability is <p className={ this.state.corporationTaxFixed ? \"red\" : \"white\" }>£{corporationTaxFixed}</p>.</li>\r\n                    <li>The income tax due on your dividends is <p className={ this.state.incomeTaxOutsideFixed ? \"red\" : \"white\" }>£{incomeTaxOutsideFixed}</p>.</li>\r\n                    <li>Your overall combined tax liability is <p className={ this.state.combinedOutsideFixed ? \"red\" : \"white\" }>£{combinedOutsideFixed}</p>.</li>\r\n                    <li>Working 'outside IR35', your annual post-tax income amounts to <p className={ this.state.outsideAnnualFixed ? \"green\" : \"white\" }>£{outsideAnnualFixed}</p>.</li>\r\n                    <li>This amounts to <p className={ this.state.outsideMonthlyFixed ? \"green\" : \"white\" }>£{outsideMonthlyFixed}</p> per month.</li>\r\n                </ul>\r\n              </div>\r\n              <p>Please note: These calculations are accurate as of the 2019-20 tax year.</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React, { Component } from 'react';\nimport './App.css';\nimport Banner from './components/Banner';\nimport Intro from './components/Intro';\nimport Calculator from './components/Calculator';\n\nclass App extends Component {\n  state = {\n    visible: true\n  }\n  render () {\n    const buttonText = this.state.visible ? \"Calculate Tax\" : \"Hide Calculation\";\n    return (\n      <div className=\"App\">\n        <Banner />\n        <Intro />\n        <button onClick={() => {\n          this.setState({ visible: !this.state.visible });\n        }}>{buttonText}</button>\n        { this.state.visible ? null : <Calculator /> }\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}